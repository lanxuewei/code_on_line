<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.lanxuewei.code_on_line.dao.mapper.UserMapper" >
  <resultMap id="BaseResultMap" type="com.lanxuewei.code_on_line.dao.entity.User" >
    <id column="id" property="id" jdbcType="BIGINT" />
    <result column="user_name" property="userName" jdbcType="VARCHAR" />
    <result column="password" property="password" jdbcType="VARCHAR" />
    <result column="status" property="status" jdbcType="TINYINT" />
    <result column="real_name" property="realName" jdbcType="VARCHAR" />
    <result column="sex" property="sex" jdbcType="TINYINT" />
    <result column="img" property="img" jdbcType="VARCHAR" />
  </resultMap>
  <resultMap id="ResultMapWithBLOBs" type="com.lanxuewei.code_on_line.dao.entity.User" extends="BaseResultMap" >
    <result column="des" property="des" jdbcType="LONGVARCHAR" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, user_name, `password`, `status`, real_name, sex, img
  </sql>
  <sql id="Blob_Column_List" >
    des
  </sql>
  <select id="selectByPrimaryKey" resultMap="ResultMapWithBLOBs" parameterType="java.lang.Long" >
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from `user`
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    delete from `user`
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="com.lanxuewei.code_on_line.dao.entity.User" keyProperty="id" useGeneratedKeys="true">
    insert into `user` (user_name, password,
      status, real_name, sex, img, des)
    values (#{userName,jdbcType=VARCHAR}, #{password,jdbcType=VARCHAR},
      #{status,jdbcType=TINYINT}, #{realName,jdbcType=VARCHAR}, #{sex,jdbcType=TINYINT}, 
      #{img,jdbcType=VARCHAR}, #{des,jdbcType=LONGVARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.lanxuewei.code_on_line.dao.entity.User" keyProperty="id" useGeneratedKeys="true">
    insert into `user`
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="userName != null" >
        user_name,
      </if>
      <if test="password != null" >
        password,
      </if>
      <if test="status != null" >
        status,
      </if>
      <if test="realName != null" >
        real_name,
      </if>
      <if test="sex != null" >
        sex,
      </if>
      <if test="img != null" >
        img,
      </if>
      <if test="des != null" >
        des,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=BIGINT},
      </if>
      <if test="userName != null" >
        #{userName,jdbcType=VARCHAR},
      </if>
      <if test="password != null" >
        #{password,jdbcType=VARCHAR},
      </if>
      <if test="status != null" >
        #{status,jdbcType=TINYINT},
      </if>
      <if test="realName != null" >
        #{realName,jdbcType=VARCHAR},
      </if>
      <if test="sex != null" >
        #{sex,jdbcType=TINYINT},
      </if>
      <if test="img != null" >
        #{img,jdbcType=VARCHAR},
      </if>
      <if test="des != null" >
        #{des,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.lanxuewei.code_on_line.dao.entity.User" >
    update `user`
    <set >
      <if test="userName != null" >
        user_name = #{userName,jdbcType=VARCHAR},
      </if>
      <if test="password != null" >
        `password` = #{password,jdbcType=VARCHAR},
      </if>
      <if test="status != null" >
        `status` = #{status,jdbcType=TINYINT},
      </if>
      <if test="realName != null" >
        real_name = #{realName,jdbcType=VARCHAR},
      </if>
      <if test="sex != null" >
        sex = #{sex,jdbcType=TINYINT},
      </if>
      <if test="img != null" >
        img = #{img,jdbcType=VARCHAR},
      </if>
      <if test="des != null" >
        des = #{des,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.lanxuewei.code_on_line.dao.entity.User" >
    update `user`
    set user_name = #{userName,jdbcType=VARCHAR},
      `password` = #{password,jdbcType=VARCHAR},
      `status` = #{status,jdbcType=TINYINT},
      real_name = #{realName,jdbcType=VARCHAR},
      sex = #{sex,jdbcType=TINYINT},
      img = #{img,jdbcType=VARCHAR},
      des = #{des,jdbcType=LONGVARCHAR}
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.lanxuewei.code_on_line.dao.entity.User" >
    update `user`
    set user_name = #{userName,jdbcType=VARCHAR},
      `password` = #{password,jdbcType=VARCHAR},
      `status` = #{status,jdbcType=TINYINT},
      real_name = #{realName,jdbcType=VARCHAR},
      sex = #{sex,jdbcType=TINYINT},
      img = #{img,jdbcType=VARCHAR}
    where id = #{id,jdbcType=BIGINT}
  </update>
  <!-- 通过userName和status查找User -->
  <select id="selectByUserName" resultMap="ResultMapWithBLOBs">
    select
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from `user`
    where user_name = #{userName,jdbcType=VARCHAR} and
          `status` = #{status,jdbcType=TINYINT}
  </select>
  <!-- 根据user_id查找对应的status 用于身份判断 -->
  <select id="selectStatusByUserId" parameterType="java.lang.Long" resultType="java.lang.Byte">
    select `status`
    from user
    where id = #{id,jdbcType=BIGINT}
  </select>
  <!-- 根据条件查询所有用户 -->
  <select id="selectAllUsers" resultType="com.lanxuewei.code_on_line.dao.entity.User">
    select
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from `user`
    <where>
      <!-- status 0:管理员 1:学生 -->
      <if test="status != null">
        and `status` = #{status,jdbcType=TINYINT}
      </if>
      <!-- 表示查询所有账号,即除了管理员之外账号 -->
      <if test="status == null">
        and `status` != 0
      </if>
      <!-- keyword 为关键字 可为空 -->
      <if test="keyword != null">
        and locate(#{keyword,jdbcType=VARCHAR}, `real_name`)>0
      </if>
    </where>
  </select>
</mapper>